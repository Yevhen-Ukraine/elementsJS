'use strict';
//  1.
const bigint = 762374568723465872346587236456928734659873465n; // Если число больше чем 2 в 53 степени то необходимо применять такой тип данных как bigint. Просто подставляем в конце числа букву n

// 2.
const sameBigint = BigInt(762374568723465872346587236456928734659873465);

// Поэксперементируем
console.log(typeof(bigint));

// Получаем как тип данных bigint

/* bigint Нельзя использовать с методами со встроенным обьектом math, также нельзя использовать с обычными числами  */ 

// Если два больших числа

// console.log(1n + 2n); // Результат 3n

/* C bigint можно без проблем использовать все операторы за исключением деления, сдесь немного сложнее. ЭТА ОПЕРАЦИЯ ВОЗВРАЩАЕТ ОКРУГЛЕННОЕ ЧИСЛО БЕЗ ДРОБНОЙ ЧАСТИ */

/* Операторы сравнения тоже нормально работают даже при сравнении с обычными числами, но т.к. значения относятся к разным типам данных сравнение правильно работает при не строгом сравнении */

/* Сложения bigint с обычным числом (КОНВЕРТАЦИЯ) */

let bigintt = 1n;
let number = 2;

console.log(bigint + BigInt(number)); // Получаем тип данных bigint

console.log(Number(bigint) + number); // Получаем тип данных обычное число